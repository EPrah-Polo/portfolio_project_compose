docker exec -i pg_container psql -c 'CREATE DATABASE my_sing_course;'

ALTER SEQUENCE progress_id_seq RESTART WITH 1

SELECT s.id AS student_id, s.first_name, s.last_name, s.age, u.username, u.password FROM students s
JOIN user_accounts u
ON s.id = u.student_id;

INSERT INTO students (first_name, last_name, age)
VALUES ('Edward', 'Prah', 38);

INSERT INTO students (first_name, last_name, age)
VALUES ('Marty', 'Goetz', 60);

INSERT INTO students (first_name, last_name, age)
VALUES ('Fred', 'Hammond', 59);

INSERT INTO students (first_name, last_name, age)
VALUES ('Esther', 'Mui', 48);

INSERT INTO user_accounts (username, password, student_id)
VALUES ('edwardPacct', 'pass1234', 1);

INSERT INTO user_accounts (username, password, student_id)
VALUES ('martyGacct', 'pass1234', 2);

INSERT INTO user_accounts (username, password, student_id)
VALUES ('fredHacct', 'pass1234', 3);

INSERT INTO user_accounts (username, password, student_id)
VALUES ('estherMacct', 'pass1234', 4);

INSERT INTO courses (name, level)
VALUES ('Baritone', '1');

INSERT INTO courses (name, level)
VALUES ('Tenor', '1');

INSERT INTO courses (name, level)
VALUES ('Soprano', '1');

INSERT INTO courses (name, level)
VALUES ('Alto', '1');


INSERT INTO students_enrolled (student_id, course_id)
VALUES (1, 1); 
--student id 1 is Edward Prah, course_id 1 is Baritone course.

INSERT INTO students_enrolled (student_id, course_id)
VALUES (2, 1); 
--baritone marty
INSERT INTO students_enrolled (student_id, course_id)
VALUES (3, 2);
--tenor fred
INSERT INTO students_enrolled (student_id, course_id)
VALUES (4, 3); 
--soprano esther

ALTER TABLE courses
DROP CONSTRAINT courses_level_key;

SELECT s.id AS student_id, s.first_name, s.last_name, se.course_id, c.name
FROM students s
JOIN students_enrolled se
	ON s.id = se.student_id
JOIN courses c
	ON se.course_id = c.id;
-- VIEW DATA FROM BRIDGE TABLE (many to many)

INSERT INTO exercises (name)
VALUES ('Vibrato');

INSERT INTO exercises (name)
VALUES ('Breathing');

INSERT INTO exercises (name)
VALUES ('Lip Trills');

INSERT INTO exercises (name)
VALUES ('Resonance');

INSERT INTO exercises (name)
VALUES ('Posture');

-- Progress id is connected to student id in my mind

INSERT INTO progress (feedback, range, tone, timbre, entry_date, exercise_id)
VALUES ('Edward still needs to balance the head and chest registers to achieve natural vibrato',
'Baritone range - Highest note in scales is F5 - lowest note around B2', 'rich tone -still needs work',
'some resonance but with some waver', CURRENT_TIMESTAMP, 1);

INSERT INTO progress (feedback, range, tone, timbre, entry_date, exercise_id)
VALUES ('Fred has great resonance',
'Tenor range ', 'rich tone',
'great resonance', CURRENT_TIMESTAMP, 4);

INSERT INTO progress (feedback, range, tone, timbre, entry_date, exercise_id)
VALUES ('Esther has great posture. She does pandiculation exercises and pilates to help her posture.',
'Soprano range ', 'bright beautiful tone',
'great resonance', CURRENT_TIMESTAMP, 5);

-- Edward Prah student id 1 and progress id 1 (first entry into progress table)

SELECT * FROM students s
JOIN students_progress sp
	ON s.id = sp.student_id
JOIN progress p
	ON sp.progress_id = p.id;

INSERT INTO students_progress (student_id, progress_id)
VALUES (1, 1);
-- Edward Prah student id 1 and progress id 1 (first entry into progress table)

INSERT INTO students_progress (student_id, progress_id)
VALUES (3, 2);
-- Fred Hammond student id 3 and progress id 2 (second entry into progress table)

INSERT INTO students_progress (student_id, progress_id)
VALUES (4, 3);
-- Esther Mui student id 4 and progress id 3 (third entry into progress table)

ALTER TABLE progress
RENAME COLUMN date TO entry_date;

delete from progress where entry_date IS NULL;
-- deletes all date from row

ALTER TABLE progress
ADD COLUMN entry_date DATE NOT NULL;
-- ADD Column with constraint


SELECT s.first_name, s.last_name, 
	c.name as course_name, c.level AS course_level, p.id,
	p.timbre, p.entry_date, p.feedback, p.range
FROM students s
JOIN students_enrolled se
	ON s.id = se.student_id
JOIN courses c
	ON se.course_id = c.id
JOIN students_progress sp
	ON s.id = sp.student_id
JOIN progress p
 	ON sp.progress_id = p.id;


INSERT INTO students_exercises (student_id, exercise_id)
VALUES (1, 1);
--Edward Prah student id 1 , exercise 1 is Vibrato

INSERT INTO students_exercises (student_id, exercise_id)
VALUES (3, 4);
--Fred H student id 3 , exercise 4 is resonance

INSERT INTO students_exercises (student_id, exercise_id)
VALUES (4, 5);
--Esther student id 4 , exercise 5 is posture

SELECT s.first_name, s.last_name, e.name, p.* FROM students s
JOIN students_exercises se
	ON s.id = se.student_id
JOIN exercises e
	ON e.id = se.exercise_id
JOIN progress p
	ON se.exercise_id = p.exercise_id;

SELECT s.first_name, s.last_name, s.age, sp.student_id, p.entry_date,
	p.feedback, e.name as exercise_name
FROM students s
JOIN students_progress sp
ON s.id = sp.student_id
JOIN progress p
ON sp.progress_id = p.id
JOIN exercises e
ON p.exercise_id = e.id

BTREE index:

SELECT entry_date
FROM progress
WHERE entry_date >= date '2021-12-30'

CREATE INDEX progress_btree_index ON progress(entry_date);

View BTREE index:
SELECT tablename, indexname, indexdef FROM pg_indexes WHERE tablename NOT LIKE 'pg_%';

Bash terminal commands:
docker exec pg_container pg_dump --verbose --file my_sing_course_dump.sql my_sing_course

docker exec pg_container head -n 100 my_sing_course_dump.sql

docker cp pg_container:my_sing_course_dump.sql data